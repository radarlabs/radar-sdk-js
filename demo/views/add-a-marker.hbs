        <div class="content flex-grow-1 p-4">
          <h1 class="mb-4">Add a marker</h1>
          <div id="error-alert" class="alert alert-danger fade show" role="alert" style="display: none;">
            <strong>Error</strong> Something went wrong. Check the developer console for details.
          </div>

          <p>Initialize a new map with the Radar SDK and add a marker to the map.</p>

          <div class="callout">
            Radar map objects are MapLibre GL JS references.
            See their <a href="https://maplibre.org/maplibre-gl-js-docs/api/">documentation</a> for additional functionality.
          </div>

          <div>
            <input id="imageUrl" class="form-control form-control-sm mb-3" data-bs-placement="bottom" data-bs-title="Set your remote marker URL" type="text" placeholder="URL for marker image" />

            <div id="map" style="width: 100%; height: 500px; display: none;"></div>
            <div id="map-warning" style="width: 100%; height: 500px; background: #f7fafc;">
              <p style="color: #697386; font-weight: bold; text-align: center; padding-top: 220px;">Add publishable key to see map</p>
            </div>
          </div>
        </div>

        <script>
          let map;
          const init = (publishableKey) => {
            $('#error-alert').hide();
            $('#map-warning').hide();
            $('#map').show();

            Radar.initialize(publishableKey, { debug: true });

            // prevent duplicate maps
            if (map) {
              map.remove();
            }

            map = Radar.ui.map({
              container: 'map',
            });

            let url;
            let marker;
            map.on('load', () => {
              const { lat, lng } = map.getCenter();

              map.on('click', (e) => {
              console.log('MAP CLICK', e);
                const { lng, lat } = e.lngLat;

                // create marker from click location
                const marker = Radar.ui.marker({ url })
                  .setLngLat([lng, lat])
                  .addTo(map);

                // fit map to markers
                map.fitToMarkers({ maxZoom: 14, padding: 80 });

                // add listener to remove marker on click
                marker.on('click', (e) => {
                  console.log('MARKER CLICK', e);
                  marker.remove();
                  map.fitToMarkers({ maxZoom: 14, padding: 80 }); // refit after marker removed
                });
              });

              // use custom marker from URL
              $('#imageUrl').on('change', (e) => {
                url = e.target.value;
              });
            });

            map.on('error', (err) => {
              console.error(err);
              $('#error-alert').show();
            });
          };


          // initalize map on api key changes
          $('#publishableKey').on('change', () => {
            const publishableKey = $('#publishableKey').val();
            if (publishableKey) {
              init(publishableKey);
            }
          });

        </script>
